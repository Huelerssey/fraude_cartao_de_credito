import json
import pandas as pd
import streamlit as st
from streamlit_lottie import st_lottie
from streamlit_option_menu import option_menu


# configuraÃ§Ãµes da pagina
st.set_page_config(
    page_title='DetecÃ§Ã£o de Fraude',
    page_icon='ğŸ’³',
    # layout='wide'
)

# estilos de css
with open("style.css") as f:
    st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# menu de seleÃ§Ã£o
opcao_selecionada = option_menu(
    menu_title=None,
    options=['Home', 'Notebook'],
    icons=['house-door', 'journal-code'],
    default_index=0,
    orientation='horizontal',
)

# Renderizar conteÃºdo com base na opÃ§Ã£o selecionada
if opcao_selecionada == 'Home':

    col1, col2 = st.columns(2)

    # >>animaÃ§Ãµes<<

    # hello
    with open('hello.json') as source:
        hello=json.load(source)
    with open('programing.json') as source:
        programing=json.load(source)
    
    # boas vindas ao projeto
    with col2:
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.subheader("Boas vindas ao projeto DetecÃ§Ã£o de Fraude")
    with col1:
        st_lottie(hello, height=400, width=300)
    
    # resumo do projeto
    with col2:
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.write("")
        st.subheader("Este Ã© um projeto de ciÃªncia de dados utilizando um dataset pÃºblico disponÃ­vel na plataforma Kaggle para realizar anÃ¡lise e previsÃ£o de fraudes em cartÃµes de crÃ©dito.")
    with col1:
        st_lottie(programing, height=400, width=300)

# renderiza a opÃ§Ã£o do notebook
if opcao_selecionada == 'Notebook':

    # tabela usada para exibir algumas funÃ§Ãµes na tela
    tabela = pd.read_csv('dataset/creditcard.csv')

    st.title("Notebook do Projeto")
    st.write("")

    st.header("1. IntroduÃ§Ã£o")
    st.write("Bem-vindo ao projeto de detecÃ§Ã£o de fraudes em cartÃµes de crÃ©dito! Aqui, vocÃª vai me acompanhar em uma jornada completa, explorando todos os aspectos que envolvem desde a obtenÃ§Ã£o dos dados atÃ© o compartilhamento dos resultados. Ao longo deste storytelling, vamos executar as etapas de extraÃ§Ã£o, limpeza e transformaÃ§Ã£o dos dados (ELT), mergulhar em tÃ©cnicas de modelagem estatÃ­stica e machine learning, e por fim, apresentar os insights e descobertas que nos ajudarÃ£o a combater efetivamente as fraudes nesse cenÃ¡rio.")
    st.image("imagens/1.png")
    st.write("")

    st.header("2. ObtenÃ§Ã£o dos dados")
    st.write("Na fase de obtenÃ§Ã£o dos dados, recorri Ã  plataforma Kaggle, uma fonte confiÃ¡vel de conjuntos de dados reais para cientistas de dados. Para este projeto, utilizei dados fornecidos por uma instituiÃ§Ã£o financeira europeia, disponÃ­veis neste [link](https://www.kaggle.com/datasets/mlg-ulb/creditcardfraud). Esses dados representam transaÃ§Ãµes de cartÃµes de crÃ©dito e sÃ£o essenciais para o desenvolvimento da anÃ¡lise e detecÃ§Ã£o de fraudes.")
    st.image("imagens/2.png")
    st.write("")

    st.header("3. Entendimento da Ã¡rea/negÃ³cio")
    st.write("Vamos comeÃ§ar entendendo a base de dados, aqui estÃ¡ uma tabela com as 5 primeiras linhas do nosso dataset.")
    st.dataframe(tabela.head(5), hide_index=True)
    st.write("â€¢ Coluna 'Time' (tempo): contÃ©m os segundos decorridos entre cada transaÃ§Ã£o e a primeira transaÃ§Ã£o.")
    st.write("â€¢ Coluna 'Amount' (valor): contÃ©m o valor da transaÃ§Ã£o.")
    st.write("â€¢ Colunas 'V1, V2...V28' (caracteristicas): sÃ£o as caracteristicas da transaÃ§Ã£o que passaram por um processo de PCA, ou seja, os dados foram transformados de maneira que nÃ£o seja possÃ­vel indetificar o dono real da transaÃ§Ã£o, para garantir a confidencialidade.")
    st.write("â€¢ Coluna 'Class' (classe): Ã© a variÃ¡vel de resposta onde toda vez que o valor for 1, a transaÃ§Ã£o Ã© uma fraude e quando for 0, significa que a transaÃ§Ã£o nÃ£o Ã© fraudolenta.")
    st.write("EntÃ£o, atravÃ©s desses dados (Tempo, Valor e Caracteristicas), vamos desenvolver um modelo que seja capaz de prever se uma transaÃ§Ã£o Ã© ou nÃ£o fraudolenta.")
    st.write("")

    st.header("4. Limpeza e tratamento dos dados")
    st.write("ComeÃ§ando com a visualisaÃ§Ã£o estatÃ­stica da base de dados:")
    codigo1 = """
    print(tabela.info())
    RangeIndex: 284807 entries, 0 to 284806
    Data columns (total 31 columns):
    #   Column  Non-Null Count   Dtype
    ---  ------  --------------   -----
    0   Time    284807 non-null  float64
    1   V1      284807 non-null  float64
    2   V2      284807 non-null  float64
    3   V3      284807 non-null  float64
    4   V4      284807 non-null  float64
    5   V5      284807 non-null  float64
    6   V6      284807 non-null  float64
    7   V7      284807 non-null  float64
    8   V8      284807 non-null  float64
    9   V9      284807 non-null  float64
    10  V10     284807 non-null  float64
    11  V11     284807 non-null  float64
    12  V12     284807 non-null  float64
    13  V13     284807 non-null  float64
    14  V14     284807 non-null  float64
    15  V15     284807 non-null  float64
    16  V16     284807 non-null  float64
    17  V17     284807 non-null  float64
    18  V18     284807 non-null  float64
    19  V19     284807 non-null  float64
    20  V20     284807 non-null  float64
    21  V21     284807 non-null  float64
    22  V22     284807 non-null  float64
    23  V23     284807 non-null  float64
    24  V24     284807 non-null  float64
    25  V25     284807 non-null  float64
    26  V26     284807 non-null  float64
    27  V27     284807 non-null  float64
    28  V28     284807 non-null  float64
    29  Amount  284807 non-null  float64
    30  Class   284807 non-null  int64
    dtypes: float64(30), int64(1)
    """
    st.code(codigo1, language='python')
    st.write("Ao analisar o cÃ³digo, Ã© possÃ­vel constatar que a base de dados inicial estÃ¡ uniforme, o que Ã© algo relativamente raro e extremamente positivo. Essa uniformidade nos dados economiza um tempo valioso durante as etapas de prÃ©-processamento e limpeza, permitindo um foco maior na anÃ¡lise e detecÃ§Ã£o de padrÃµes e fraudes.")
    st.write("")

    st.header("5. AnÃ¡lise exploratÃ³ria de dados")
    st.write("Nesta etapa, aplicarei meus conhecimentos em estatÃ­stica e programaÃ§Ã£o para preparar os dados e tornÃ¡-los prontos para serem utilizados em um modelo de previsÃ£o. Como este Ã© um projeto de portfÃ³lio, vou compartilhar a parte mais visual e explicativa do processo. Caso tenha interesse, vocÃª pode acessar o cÃ³digo-fonte completo da aplicaÃ§Ã£o no meu GitHub, disponÃ­vel neste [link](https://github.com/Huelerssey/fraude_cartao_de_credito).")
    st.write("Vamos iniciar exibindo um grÃ¡fico que apresenta a porcentagem de transaÃ§Ãµes fraudulentas em nossa base de dados:")
    st.image("imagens/3.png")
    st.write("Ã‰ evidente que hÃ¡ uma porcentagem mÃ­nima de fraudes, o que impacta diretamente na maneira como avaliaremos nosso modelo de machine learning e nada melhor do que um exemplo prÃ¡tico para demonstrar isso.")
    st.write("O trecho de cÃ³digo abaixo Ã© responsÃ¡vel por treinar e testar um modelo de inteligÃªncia artificial utilizando a acurÃ¡cia como mÃ©todo de avaliaÃ§Ã£o. O resultado foi de 99.92%, entÃ£o isso quer dizer que acabamos de construir um modelo de previsÃ£o perfeito, certo? Errado!")
    codigo2 = """
    # definindo dados de treino e de teste
    y = tabela['Class']
    x = tabela.drop('Class', axis=1)

    # dividindo a base entre treino e teste
    x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, test_size=0.30, random_state=42, stratify=y)

    # criando uma IA
    clf = tree.DecisionTreeClassifier(random_state=42)

    # treina a IA
    clf = clf.fit(x_treino, y_treino)

    # previsÃ£o da IA
    y_pred = clf.predict(x_teste)

    # Avaliando a IA
    accuracy = accuracy_score(y_teste, y_pred)
    accuracy_percent = accuracy * 100
    accuracy_formatted = f"{accuracy_percent:.2f}%"
    print(accuracy_formatted)
    """
    st.code(codigo2, language='python')
    st.write("A maioria das transaÃ§Ãµes nÃ£o sÃ£o fraudolentas, entÃ£o basta que o modelo considere que todos as novas transaÃ§Ãµes que ele tenta prever tambÃ©m nÃ£o sÃ£o, assim ele terÃ¡ uma alta taxa de acerto. Percebe como isso acaba afetando o nosso resultado ? Afinal, a cada fraude nÃ£o prevista, isso representa um impacto financeiro negativo para a empresa.")
    st.write("")

    st.header("6. Modelando uma inteligÃªncia artificial")
    st.write("")

    st.header("7. Resultados e consideraÃ§Ãµes finais")
    st.write("")